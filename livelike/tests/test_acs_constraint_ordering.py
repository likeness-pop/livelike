import numpy
import pytest

from livelike import acs
from livelike.config import constraints, up_expanded_constraints_selection

# skip for now if no key available -- reimplement with caches later
if not pytest.USING_KEY:
    pytest.skip(allow_module_level=True)


# target PUMA
p = "4701604"


# Structure of this file:
#   Tests:
#     1. Default constraints, no selection
#     2. Default constraints, expanded selection
#     3. Default constraints, custom selection
#     4. Custom constraints, default order
#     5. Custom constraints, no selection, custom order
#     6. Custom constraints, with selection, custom order
#
#   Ordering for each:
#     - known values
#     - known columns
#     - test


# -----------------------------------------------------------------------------------

#####################################################################################
# 1. Default constraints, no selection
#####################################################################################

# -----------------------------------------------------------------------------------

pup_default_constraints_no_selection_values = numpy.array(
    [
        ["universe", "B01001001"],
        ["universe", "B09019026"],
        ["universe", "B25001001"],
        ["universe", "B25003001"],
        ["universe", "B27010001"],
        ["worker", "B23022004"],
        ["worker", "B23022011"],
        ["worker", "B23022018"],
        ["worker", "B23022028"],
        ["worker", "B23022035"],
        ["worker", "B23022042"],
        ["worker", "B23025004"],
        ["worker", "B23025005"],
        ["worker", "B23025006"],
        ["worker", "B23025007"],
        ["worker", "B24080004"],
        ["worker", "B24080005"],
        ["worker", "B24080006"],
        ["worker", "B24080007"],
        ["worker", "B24080008"],
        ["worker", "B24080009"],
        ["worker", "B24080010"],
        ["worker", "B24080011"],
        ["worker", "B24080014"],
        ["worker", "B24080015"],
        ["worker", "B24080016"],
        ["worker", "B24080017"],
        ["worker", "B24080018"],
        ["worker", "B24080019"],
        ["worker", "B24080020"],
        ["worker", "B24080021"],
        ["worker", "C24010005"],
        ["worker", "C24010006"],
        ["worker", "C24010008"],
        ["worker", "C24010009"],
        ["worker", "C24010010"],
        ["worker", "C24010012"],
        ["worker", "C24010013"],
        ["worker", "C24010014"],
        ["worker", "C24010015"],
        ["worker", "C24010017"],
        ["worker", "C24010018"],
        ["worker", "C24010020"],
        ["worker", "C24010022"],
        ["worker", "C24010023"],
        ["worker", "C24010024"],
        ["worker", "C24010025"],
        ["worker", "C24010026"],
        ["worker", "C24010028"],
        ["worker", "C24010029"],
        ["worker", "C24010031"],
        ["worker", "C24010032"],
        ["worker", "C24010033"],
        ["worker", "C24010035"],
        ["worker", "C24010036"],
        ["worker", "C24010037"],
        ["worker", "C24010041"],
        ["worker", "C24010042"],
        ["worker", "C24010044"],
        ["worker", "C24010045"],
        ["worker", "C24010046"],
        ["worker", "C24010048"],
        ["worker", "C24010049"],
        ["worker", "C24010050"],
        ["worker", "C24010051"],
        ["worker", "C24010053"],
        ["worker", "C24010054"],
        ["worker", "C24010056"],
        ["worker", "C24010058"],
        ["worker", "C24010059"],
        ["worker", "C24010060"],
        ["worker", "C24010061"],
        ["worker", "C24010062"],
        ["worker", "C24010064"],
        ["worker", "C24010065"],
        ["worker", "C24010067"],
        ["worker", "C24010068"],
        ["worker", "C24010069"],
        ["worker", "C24010071"],
        ["worker", "C24010072"],
        ["worker", "C24010073"],
        ["worker", "C24030003"],
        ["worker", "C24030006"],
        ["worker", "C24030007"],
        ["worker", "C24030008"],
        ["worker", "C24030009"],
        ["worker", "C24030010"],
        ["worker", "C24030013"],
        ["worker", "C24030014"],
        ["worker", "C24030017"],
        ["worker", "C24030021"],
        ["worker", "C24030024"],
        ["worker", "C24030027"],
        ["worker", "C24030028"],
        ["worker", "C24030030"],
        ["worker", "C24030033"],
        ["worker", "C24030034"],
        ["worker", "C24030035"],
        ["worker", "C24030036"],
        ["worker", "C24030037"],
        ["worker", "C24030040"],
        ["worker", "C24030041"],
        ["worker", "C24030044"],
        ["worker", "C24030048"],
        ["worker", "C24030051"],
        ["worker", "C24030054"],
        ["worker", "C24030055"],
        ["student", "B14002005"],
        ["student", "B14002006"],
        ["student", "B14002008"],
        ["student", "B14002009"],
        ["student", "B14002011"],
        ["student", "B14002012"],
        ["student", "B14002014"],
        ["student", "B14002015"],
        ["student", "B14002017"],
        ["student", "B14002018"],
        ["student", "B14002020"],
        ["student", "B14002021"],
        ["student", "B14002023"],
        ["student", "B14002024"],
        ["student", "B14002029"],
        ["student", "B14002030"],
        ["student", "B14002032"],
        ["student", "B14002033"],
        ["student", "B14002035"],
        ["student", "B14002036"],
        ["student", "B14002038"],
        ["student", "B14002039"],
        ["student", "B14002041"],
        ["student", "B14002042"],
        ["student", "B14002044"],
        ["student", "B14002045"],
        ["student", "B14002047"],
        ["student", "B14002048"],
        ["student", "B14007003"],
        ["student", "B14007004"],
        ["student", "B14007005"],
        ["student", "B14007006"],
        ["student", "B14007007"],
        ["student", "B14007008"],
        ["student", "B14007009"],
        ["student", "B14007010"],
        ["student", "B14007011"],
        ["student", "B14007012"],
        ["student", "B14007013"],
        ["student", "B14007014"],
        ["student", "B14007015"],
        ["student", "B14007016"],
        ["student", "B14007017"],
        ["student", "B14007018"],
        ["mobility", "B08134002"],
        ["mobility", "B08134003"],
        ["mobility", "B08134004"],
        ["mobility", "B08134005"],
        ["mobility", "B08134006"],
        ["mobility", "B08134007"],
        ["mobility", "B08134008"],
        ["mobility", "B08134009"],
        ["mobility", "B08134010"],
        ["mobility", "B08301002"],
        ["mobility", "B08301003"],
        ["mobility", "B08301004"],
        ["mobility", "B08301010"],
        ["mobility", "B08301016"],
        ["mobility", "B08301017"],
        ["mobility", "B08301018"],
        ["mobility", "B08301019"],
        ["mobility", "B08301020"],
        ["mobility", "B08301021"],
        ["mobility", "B25044003"],
        ["mobility", "B25044004"],
        ["mobility", "B25044005"],
        ["mobility", "B25044006"],
        ["mobility", "B25044007"],
        ["mobility", "B25044008"],
        ["mobility", "B25044010"],
        ["mobility", "B25044011"],
        ["mobility", "B25044012"],
        ["mobility", "B25044013"],
        ["mobility", "B25044014"],
        ["mobility", "B25044015"],
        ["demographic", "B11016003"],
        ["demographic", "B11016004"],
        ["demographic", "B11016005"],
        ["demographic", "B11016006"],
        ["demographic", "B11016007"],
        ["demographic", "B11016008"],
        ["demographic", "B11016010"],
        ["demographic", "B11016011"],
        ["demographic", "B11016012"],
        ["demographic", "B11016013"],
        ["demographic", "B11016014"],
        ["demographic", "B11016015"],
        ["demographic", "B11016016"],
    ]
)

pup_default_constraints_no_selection_cols = [
    "population",
    "group_quarters_pop",
    "housing_units",
    "occhu",
    "civ_noninst_pop",
    "male_hours_GE35",
    "male_hours_15.34",
    "male_hours_1.14",
    "female_hours_GE35",
    "female_hours_15.34",
    "female_hours_1.14",
    "emp_stat_employed",
    "emp_stat_unemp",
    "emp_stat_mil",
    "emp_stat_not.in.force",
    "sexcw_male_private",
    "sexcw_male_self.emp_inc",
    "sexcw_male_non.prof",
    "sexcw_male_local.gov",
    "sexcw_male_st.gov",
    "sexcw_male_fed.gov",
    "sexcw_male_self.emp_non.inc",
    "sexcw_male_wo.pay",
    "sexcw_female_private",
    "sexcw_female_self.emp_inc",
    "sexcw_female_non.prof",
    "sexcw_female_local.gov",
    "sexcw_female_st.gov",
    "sexcw_female_fed.gov",
    "sexcw_female_self.emp_non.inc",
    "sexcw_female_wo.pay",
    "sexocc_male_mgmt",
    "sexocc_male_bus.fin",
    "sexocc_male_cmp",
    "sexocc_male_eng",
    "sexocc_male_sci",
    "sexocc_male_cms",
    "sexocc_male_lgl",
    "sexocc_male_edu",
    "sexocc_male_ent",
    "sexocc_male_med",
    "sexocc_male_med.tech",
    "sexocc_male_hls",
    "sexocc_male_prt",
    "sexocc_male_law.enf",
    "sexocc_male_eat",
    "sexocc_male_cln",
    "sexocc_male_prs",
    "sexocc_male_sal",
    "sexocc_male_off",
    "sexocc_male_fff",
    "sexocc_male_con.ext",
    "sexocc_male_rpr",
    "sexocc_male_prd",
    "sexocc_male_trn",
    "sexocc_male_trn.mat",
    "sexocc_female_mgmt",
    "sexocc_female_bus.fin",
    "sexocc_female_cmp",
    "sexocc_female_eng",
    "sexocc_female_sci",
    "sexocc_female_cms",
    "sexocc_female_lgl",
    "sexocc_female_edu",
    "sexocc_female_ent",
    "sexocc_female_med",
    "sexocc_female_med.tech",
    "sexocc_female_hls",
    "sexocc_female_prt",
    "sexocc_female_law.enf",
    "sexocc_female_eat",
    "sexocc_female_cln",
    "sexocc_female_prs",
    "sexocc_female_sal",
    "sexocc_female_off",
    "sexocc_female_fff",
    "sexocc_female_con.ext",
    "sexocc_female_rpr",
    "sexocc_female_prd",
    "sexocc_female_trn",
    "sexocc_female_trn.mat",
    "sexnaics_male_agr_ext",
    "sexnaics_male_con",
    "sexnaics_male_mfg",
    "sexnaics_male_whl",
    "sexnaics_male_ret",
    "sexnaics_male_utl_trn",
    "sexnaics_male_inf",
    "sexnaics_male_fin",
    "sexnaics_male_prf",
    "sexnaics_male_edu_med_sca",
    "sexnaics_male_ent",
    "sexnaics_male_srv",
    "sexnaics_male_adm",
    "sexnaics_female_agr_ext",
    "sexnaics_female_con",
    "sexnaics_female_mfg",
    "sexnaics_female_whl",
    "sexnaics_female_ret",
    "sexnaics_female_utl_trn",
    "sexnaics_female_inf",
    "sexnaics_female_fin",
    "sexnaics_female_prf",
    "sexnaics_female_edu_med_sca",
    "sexnaics_female_ent",
    "sexnaics_female_srv",
    "sexnaics_female_adm",
    "sch_male_pre_public",
    "sch_male_pre_private",
    "sch_male_kind_public",
    "sch_male_kind_private",
    "sch_male_01.04_public",
    "sch_male_01.04_private",
    "sch_male_05.08_public",
    "sch_male_05.08_private",
    "sch_male_09.12_public",
    "sch_male_09.12_private",
    "sch_male_undergrad_public",
    "sch_male_undergrad_private",
    "sch_male_grad.prof_public",
    "sch_male_grad.prof_private",
    "sch_female_pre_public",
    "sch_female_pre_private",
    "sch_female_kind_public",
    "sch_female_kind_private",
    "sch_female_01.04_public",
    "sch_female_01.04_private",
    "sch_female_05.08_public",
    "sch_female_05.08_private",
    "sch_female_09.12_public",
    "sch_female_09.12_private",
    "sch_female_undergrad_public",
    "sch_female_undergrad_private",
    "sch_female_grad.prof_public",
    "sch_female_grad.prof_private",
    "grade_preschl",
    "grade_kind",
    "grade_1st",
    "grade_2nd",
    "grade_3rd",
    "grade_4th",
    "grade_5th",
    "grade_6th",
    "grade_7th",
    "grade_8th",
    "grade_9th",
    "grade_10th",
    "grade_11th",
    "grade_12th",
    "grade_undergrad",
    "grade_grad",
    "cmt_mins_L10",
    "cmt_mins_10.14",
    "cmt_mins_15.19",
    "cmt_mins_20.24",
    "cmt_mins_25.29",
    "cmt_mins_30.34",
    "cmt_mins_35.44",
    "cmt_mins_45.59",
    "cmt_mins_GE60",
    "travel_car_truck_van",
    "veh_occ_drove_alone",
    "veh_occ_carpooled",
    "travel_public_transportation",
    "travel_taxicab",
    "travel_motorcycle",
    "travel_bicycle",
    "travel_walked",
    "travel_other",
    "travel_wfh",
    "txv_own_no_vehicle",
    "txv_own_01_vehicle",
    "txv_own_02_vehicle",
    "txv_own_03_vehicle",
    "txv_own_04_vehicle",
    "txv_own_GE05_vehicle",
    "txv_rent_no_vehicle",
    "txv_rent_01_vehicle",
    "txv_rent_02_vehicle",
    "txv_rent_03_vehicle",
    "txv_rent_04_vehicle",
    "txv_rent_GE05_vehicle",
    "hht_fam_hhsize_2p",
    "hht_fam_hhsize_3p",
    "hht_fam_hhsize_4p",
    "hht_fam_hhsize_5p",
    "hht_fam_hhsize_6p",
    "hht_fam_hhsize_7pm",
    "hht_nonfam_hhsize_1p",
    "hht_nonfam_hhsize_2p",
    "hht_nonfam_hhsize_3p",
    "hht_nonfam_hhsize_4p",
    "hht_nonfam_hhsize_5p",
    "hht_nonfam_hhsize_6p",
    "hht_nonfam_hhsize_7pm",
]


def test_default_constraints_no_selection():
    pup_default_constraints_no_selection = acs.puma(p, censusapikey=pytest.CENSUSAPIKEY)

    observed_values = pup_default_constraints_no_selection.constraints.loc[
        :, ["theme", "code"]
    ].values
    known_values = pup_default_constraints_no_selection_values

    observed_cols = pup_default_constraints_no_selection.est_ind.columns.tolist()
    known_cols = pup_default_constraints_no_selection_cols

    numpy.testing.assert_array_equal(observed_values, known_values)
    numpy.testing.assert_equal(observed_cols, known_cols)


# -----------------------------------------------------------------------------------

#####################################################################################
# 2. Default constraints, expanded selection
#####################################################################################

# -----------------------------------------------------------------------------------

pup_default_constraints_expanded_selection_values = numpy.array(
    [
        ["universe", "B01001001"],
        ["universe", "B09019026"],
        ["universe", "B25001001"],
        ["universe", "B25003001"],
        ["universe", "B27010001"],
        ["worker", "B23022004"],
        ["worker", "B23022011"],
        ["worker", "B23022018"],
        ["worker", "B23022028"],
        ["worker", "B23022035"],
        ["worker", "B23022042"],
        ["worker", "B23025004"],
        ["worker", "B23025005"],
        ["worker", "B23025006"],
        ["worker", "B23025007"],
        ["worker", "B24080004"],
        ["worker", "B24080005"],
        ["worker", "B24080006"],
        ["worker", "B24080007"],
        ["worker", "B24080008"],
        ["worker", "B24080009"],
        ["worker", "B24080010"],
        ["worker", "B24080011"],
        ["worker", "B24080014"],
        ["worker", "B24080015"],
        ["worker", "B24080016"],
        ["worker", "B24080017"],
        ["worker", "B24080018"],
        ["worker", "B24080019"],
        ["worker", "B24080020"],
        ["worker", "B24080021"],
        ["worker", "C24010005"],
        ["worker", "C24010006"],
        ["worker", "C24010008"],
        ["worker", "C24010009"],
        ["worker", "C24010010"],
        ["worker", "C24010012"],
        ["worker", "C24010013"],
        ["worker", "C24010014"],
        ["worker", "C24010015"],
        ["worker", "C24010017"],
        ["worker", "C24010018"],
        ["worker", "C24010020"],
        ["worker", "C24010022"],
        ["worker", "C24010023"],
        ["worker", "C24010024"],
        ["worker", "C24010025"],
        ["worker", "C24010026"],
        ["worker", "C24010028"],
        ["worker", "C24010029"],
        ["worker", "C24010031"],
        ["worker", "C24010032"],
        ["worker", "C24010033"],
        ["worker", "C24010035"],
        ["worker", "C24010036"],
        ["worker", "C24010037"],
        ["worker", "C24010041"],
        ["worker", "C24010042"],
        ["worker", "C24010044"],
        ["worker", "C24010045"],
        ["worker", "C24010046"],
        ["worker", "C24010048"],
        ["worker", "C24010049"],
        ["worker", "C24010050"],
        ["worker", "C24010051"],
        ["worker", "C24010053"],
        ["worker", "C24010054"],
        ["worker", "C24010056"],
        ["worker", "C24010058"],
        ["worker", "C24010059"],
        ["worker", "C24010060"],
        ["worker", "C24010061"],
        ["worker", "C24010062"],
        ["worker", "C24010064"],
        ["worker", "C24010065"],
        ["worker", "C24010067"],
        ["worker", "C24010068"],
        ["worker", "C24010069"],
        ["worker", "C24010071"],
        ["worker", "C24010072"],
        ["worker", "C24010073"],
        ["worker", "C24030003"],
        ["worker", "C24030006"],
        ["worker", "C24030007"],
        ["worker", "C24030008"],
        ["worker", "C24030009"],
        ["worker", "C24030010"],
        ["worker", "C24030013"],
        ["worker", "C24030014"],
        ["worker", "C24030017"],
        ["worker", "C24030021"],
        ["worker", "C24030024"],
        ["worker", "C24030027"],
        ["worker", "C24030028"],
        ["worker", "C24030030"],
        ["worker", "C24030033"],
        ["worker", "C24030034"],
        ["worker", "C24030035"],
        ["worker", "C24030036"],
        ["worker", "C24030037"],
        ["worker", "C24030040"],
        ["worker", "C24030041"],
        ["worker", "C24030044"],
        ["worker", "C24030048"],
        ["worker", "C24030051"],
        ["worker", "C24030054"],
        ["worker", "C24030055"],
        ["student", "B14002005"],
        ["student", "B14002006"],
        ["student", "B14002008"],
        ["student", "B14002009"],
        ["student", "B14002011"],
        ["student", "B14002012"],
        ["student", "B14002014"],
        ["student", "B14002015"],
        ["student", "B14002017"],
        ["student", "B14002018"],
        ["student", "B14002020"],
        ["student", "B14002021"],
        ["student", "B14002023"],
        ["student", "B14002024"],
        ["student", "B14002029"],
        ["student", "B14002030"],
        ["student", "B14002032"],
        ["student", "B14002033"],
        ["student", "B14002035"],
        ["student", "B14002036"],
        ["student", "B14002038"],
        ["student", "B14002039"],
        ["student", "B14002041"],
        ["student", "B14002042"],
        ["student", "B14002044"],
        ["student", "B14002045"],
        ["student", "B14002047"],
        ["student", "B14002048"],
        ["student", "B14007003"],
        ["student", "B14007004"],
        ["student", "B14007005"],
        ["student", "B14007006"],
        ["student", "B14007007"],
        ["student", "B14007008"],
        ["student", "B14007009"],
        ["student", "B14007010"],
        ["student", "B14007011"],
        ["student", "B14007012"],
        ["student", "B14007013"],
        ["student", "B14007014"],
        ["student", "B14007015"],
        ["student", "B14007016"],
        ["student", "B14007017"],
        ["student", "B14007018"],
        ["mobility", "B08134002"],
        ["mobility", "B08134003"],
        ["mobility", "B08134004"],
        ["mobility", "B08134005"],
        ["mobility", "B08134006"],
        ["mobility", "B08134007"],
        ["mobility", "B08134008"],
        ["mobility", "B08134009"],
        ["mobility", "B08134010"],
        ["mobility", "B08301002"],
        ["mobility", "B08301003"],
        ["mobility", "B08301004"],
        ["mobility", "B08301010"],
        ["mobility", "B08301016"],
        ["mobility", "B08301017"],
        ["mobility", "B08301018"],
        ["mobility", "B08301019"],
        ["mobility", "B08301020"],
        ["mobility", "B08301021"],
        ["mobility", "B25044003"],
        ["mobility", "B25044004"],
        ["mobility", "B25044005"],
        ["mobility", "B25044006"],
        ["mobility", "B25044007"],
        ["mobility", "B25044008"],
        ["mobility", "B25044010"],
        ["mobility", "B25044011"],
        ["mobility", "B25044012"],
        ["mobility", "B25044013"],
        ["mobility", "B25044014"],
        ["mobility", "B25044015"],
        ["demographic", "B01001003"],
        ["demographic", "B01001004"],
        ["demographic", "B01001005"],
        ["demographic", "B01001006"],
        ["demographic", "B01001007"],
        ["demographic", "B01001008"],
        ["demographic", "B01001009"],
        ["demographic", "B01001010"],
        ["demographic", "B01001011"],
        ["demographic", "B01001012"],
        ["demographic", "B01001013"],
        ["demographic", "B01001014"],
        ["demographic", "B01001015"],
        ["demographic", "B01001016"],
        ["demographic", "B01001017"],
        ["demographic", "B01001018"],
        ["demographic", "B01001019"],
        ["demographic", "B01001020"],
        ["demographic", "B01001021"],
        ["demographic", "B01001022"],
        ["demographic", "B01001023"],
        ["demographic", "B01001024"],
        ["demographic", "B01001025"],
        ["demographic", "B01001027"],
        ["demographic", "B01001028"],
        ["demographic", "B01001029"],
        ["demographic", "B01001030"],
        ["demographic", "B01001031"],
        ["demographic", "B01001032"],
        ["demographic", "B01001033"],
        ["demographic", "B01001034"],
        ["demographic", "B01001035"],
        ["demographic", "B01001036"],
        ["demographic", "B01001037"],
        ["demographic", "B01001038"],
        ["demographic", "B01001039"],
        ["demographic", "B01001040"],
        ["demographic", "B01001041"],
        ["demographic", "B01001042"],
        ["demographic", "B01001043"],
        ["demographic", "B01001044"],
        ["demographic", "B01001045"],
        ["demographic", "B01001046"],
        ["demographic", "B01001047"],
        ["demographic", "B01001048"],
        ["demographic", "B01001049"],
        ["demographic", "B11001003"],
        ["demographic", "B11001005"],
        ["demographic", "B11001006"],
        ["demographic", "B11001008"],
        ["demographic", "B11001009"],
        ["demographic", "B11016003"],
        ["demographic", "B11016004"],
        ["demographic", "B11016005"],
        ["demographic", "B11016006"],
        ["demographic", "B11016007"],
        ["demographic", "B11016008"],
        ["demographic", "B11016010"],
        ["demographic", "B11016011"],
        ["demographic", "B11016012"],
        ["demographic", "B11016013"],
        ["demographic", "B11016014"],
        ["demographic", "B11016015"],
        ["demographic", "B11016016"],
        ["social", "B02001002"],
        ["social", "B02001003"],
        ["social", "B02001004"],
        ["social", "B02001005"],
        ["social", "B02001006"],
        ["social", "B02001007"],
        ["social", "B02001008"],
        ["social", "B03003002"],
        ["social", "B03003003"],
        ["economic", "B19001002"],
        ["economic", "B19001003"],
        ["economic", "B19001004"],
        ["economic", "B19001005"],
        ["economic", "B19001006"],
        ["economic", "B19001007"],
        ["economic", "B19001008"],
        ["economic", "B19001009"],
        ["economic", "B19001010"],
        ["economic", "B19001011"],
        ["economic", "B19001012"],
        ["economic", "B19001013"],
        ["economic", "B19001014"],
        ["economic", "B19001015"],
        ["economic", "B19001016"],
        ["economic", "B19001017"],
        ["economic", "C17002002"],
        ["economic", "C17002003"],
        ["economic", "C17002004"],
        ["economic", "C17002005"],
        ["economic", "C17002006"],
        ["economic", "C17002007"],
        ["economic", "C17002008"],
        ["housing", "B25024002"],
        ["housing", "B25024003"],
        ["housing", "B25024004"],
        ["housing", "B25024005"],
        ["housing", "B25024006"],
        ["housing", "B25024007"],
        ["housing", "B25024008"],
        ["housing", "B25024009"],
        ["housing", "B25024010"],
        ["housing", "B25024011"],
        ["housing", "B25034002"],
        ["housing", "B25034003"],
        ["housing", "B25034004"],
        ["housing", "B25034005"],
        ["housing", "B25034006"],
        ["housing", "B25034007"],
        ["housing", "B25034008"],
        ["housing", "B25034009"],
        ["housing", "B25034010"],
        ["housing", "B25034011"],
    ]
)

pup_default_constraints_expanded_selection_cols = [
    "population",
    "group_quarters_pop",
    "housing_units",
    "occhu",
    "civ_noninst_pop",
    "male_hours_GE35",
    "male_hours_15.34",
    "male_hours_1.14",
    "female_hours_GE35",
    "female_hours_15.34",
    "female_hours_1.14",
    "emp_stat_employed",
    "emp_stat_unemp",
    "emp_stat_mil",
    "emp_stat_not.in.force",
    "sexcw_male_private",
    "sexcw_male_self.emp_inc",
    "sexcw_male_non.prof",
    "sexcw_male_local.gov",
    "sexcw_male_st.gov",
    "sexcw_male_fed.gov",
    "sexcw_male_self.emp_non.inc",
    "sexcw_male_wo.pay",
    "sexcw_female_private",
    "sexcw_female_self.emp_inc",
    "sexcw_female_non.prof",
    "sexcw_female_local.gov",
    "sexcw_female_st.gov",
    "sexcw_female_fed.gov",
    "sexcw_female_self.emp_non.inc",
    "sexcw_female_wo.pay",
    "sexocc_male_mgmt",
    "sexocc_male_bus.fin",
    "sexocc_male_cmp",
    "sexocc_male_eng",
    "sexocc_male_sci",
    "sexocc_male_cms",
    "sexocc_male_lgl",
    "sexocc_male_edu",
    "sexocc_male_ent",
    "sexocc_male_med",
    "sexocc_male_med.tech",
    "sexocc_male_hls",
    "sexocc_male_prt",
    "sexocc_male_law.enf",
    "sexocc_male_eat",
    "sexocc_male_cln",
    "sexocc_male_prs",
    "sexocc_male_sal",
    "sexocc_male_off",
    "sexocc_male_fff",
    "sexocc_male_con.ext",
    "sexocc_male_rpr",
    "sexocc_male_prd",
    "sexocc_male_trn",
    "sexocc_male_trn.mat",
    "sexocc_female_mgmt",
    "sexocc_female_bus.fin",
    "sexocc_female_cmp",
    "sexocc_female_eng",
    "sexocc_female_sci",
    "sexocc_female_cms",
    "sexocc_female_lgl",
    "sexocc_female_edu",
    "sexocc_female_ent",
    "sexocc_female_med",
    "sexocc_female_med.tech",
    "sexocc_female_hls",
    "sexocc_female_prt",
    "sexocc_female_law.enf",
    "sexocc_female_eat",
    "sexocc_female_cln",
    "sexocc_female_prs",
    "sexocc_female_sal",
    "sexocc_female_off",
    "sexocc_female_fff",
    "sexocc_female_con.ext",
    "sexocc_female_rpr",
    "sexocc_female_prd",
    "sexocc_female_trn",
    "sexocc_female_trn.mat",
    "sexnaics_male_agr_ext",
    "sexnaics_male_con",
    "sexnaics_male_mfg",
    "sexnaics_male_whl",
    "sexnaics_male_ret",
    "sexnaics_male_utl_trn",
    "sexnaics_male_inf",
    "sexnaics_male_fin",
    "sexnaics_male_prf",
    "sexnaics_male_edu_med_sca",
    "sexnaics_male_ent",
    "sexnaics_male_srv",
    "sexnaics_male_adm",
    "sexnaics_female_agr_ext",
    "sexnaics_female_con",
    "sexnaics_female_mfg",
    "sexnaics_female_whl",
    "sexnaics_female_ret",
    "sexnaics_female_utl_trn",
    "sexnaics_female_inf",
    "sexnaics_female_fin",
    "sexnaics_female_prf",
    "sexnaics_female_edu_med_sca",
    "sexnaics_female_ent",
    "sexnaics_female_srv",
    "sexnaics_female_adm",
    "sch_male_pre_public",
    "sch_male_pre_private",
    "sch_male_kind_public",
    "sch_male_kind_private",
    "sch_male_01.04_public",
    "sch_male_01.04_private",
    "sch_male_05.08_public",
    "sch_male_05.08_private",
    "sch_male_09.12_public",
    "sch_male_09.12_private",
    "sch_male_undergrad_public",
    "sch_male_undergrad_private",
    "sch_male_grad.prof_public",
    "sch_male_grad.prof_private",
    "sch_female_pre_public",
    "sch_female_pre_private",
    "sch_female_kind_public",
    "sch_female_kind_private",
    "sch_female_01.04_public",
    "sch_female_01.04_private",
    "sch_female_05.08_public",
    "sch_female_05.08_private",
    "sch_female_09.12_public",
    "sch_female_09.12_private",
    "sch_female_undergrad_public",
    "sch_female_undergrad_private",
    "sch_female_grad.prof_public",
    "sch_female_grad.prof_private",
    "grade_preschl",
    "grade_kind",
    "grade_1st",
    "grade_2nd",
    "grade_3rd",
    "grade_4th",
    "grade_5th",
    "grade_6th",
    "grade_7th",
    "grade_8th",
    "grade_9th",
    "grade_10th",
    "grade_11th",
    "grade_12th",
    "grade_undergrad",
    "grade_grad",
    "cmt_mins_L10",
    "cmt_mins_10.14",
    "cmt_mins_15.19",
    "cmt_mins_20.24",
    "cmt_mins_25.29",
    "cmt_mins_30.34",
    "cmt_mins_35.44",
    "cmt_mins_45.59",
    "cmt_mins_GE60",
    "travel_car_truck_van",
    "veh_occ_drove_alone",
    "veh_occ_carpooled",
    "travel_public_transportation",
    "travel_taxicab",
    "travel_motorcycle",
    "travel_bicycle",
    "travel_walked",
    "travel_other",
    "travel_wfh",
    "txv_own_no_vehicle",
    "txv_own_01_vehicle",
    "txv_own_02_vehicle",
    "txv_own_03_vehicle",
    "txv_own_04_vehicle",
    "txv_own_GE05_vehicle",
    "txv_rent_no_vehicle",
    "txv_rent_01_vehicle",
    "txv_rent_02_vehicle",
    "txv_rent_03_vehicle",
    "txv_rent_04_vehicle",
    "txv_rent_GE05_vehicle",
    "male_a05u",
    "male_a05_09",
    "male_a10_14",
    "male_a15_17",
    "male_a18_19",
    "male_a20",
    "male_a21",
    "male_a22_24",
    "male_a25_29",
    "male_a30_34",
    "male_a35_39",
    "male_a40_44",
    "male_a45_49",
    "male_a50_54",
    "male_a55_59",
    "male_a60_61",
    "male_a62_64",
    "male_a65_66",
    "male_a67_69",
    "male_a70_74",
    "male_a75_79",
    "male_a80_84",
    "male_a85o",
    "female_a05u",
    "female_a05_09",
    "female_a10_14",
    "female_a15_17",
    "female_a18_19",
    "female_a20",
    "female_a21",
    "female_a22_24",
    "female_a25_29",
    "female_a30_34",
    "female_a35_39",
    "female_a40_44",
    "female_a45_49",
    "female_a50_54",
    "female_a55_59",
    "female_a60_61",
    "female_a62_64",
    "female_a65_66",
    "female_a67_69",
    "female_a70_74",
    "female_a75_79",
    "female_a80_84",
    "female_a85o",
    "hht_married",
    "hht_male_no_spouse",
    "hht_female_no_spouse",
    "hht_alone",
    "hht_not_alone",
    "hht_fam_hhsize_2p",
    "hht_fam_hhsize_3p",
    "hht_fam_hhsize_4p",
    "hht_fam_hhsize_5p",
    "hht_fam_hhsize_6p",
    "hht_fam_hhsize_7pm",
    "hht_nonfam_hhsize_1p",
    "hht_nonfam_hhsize_2p",
    "hht_nonfam_hhsize_3p",
    "hht_nonfam_hhsize_4p",
    "hht_nonfam_hhsize_5p",
    "hht_nonfam_hhsize_6p",
    "hht_nonfam_hhsize_7pm",
    "race_white",
    "race_blk_af_amer",
    "race_native_amer",
    "race_asian",
    "race_pac_island",
    "race_other",
    "race_mult",
    "hsplat_no",
    "hsplat_yes",
    "hhinc_L10k",
    "hhinc_10_15k",
    "hhinc_15_20k",
    "hhinc_20_25k",
    "hhinc_25_30k",
    "hhinc_30_35k",
    "hhinc_35_40k",
    "hhinc_40_45k",
    "hhinc_45_50k",
    "hhinc_50_60k",
    "hhinc_60_75k",
    "hhinc_75_100k",
    "hhinc_100_125k",
    "hhinc_125_150k",
    "hhinc_150_200k",
    "hhinc_GE200k",
    "ipr_L050",
    "ipr_050_099",
    "ipr_100_124",
    "ipr_125_149",
    "ipr_150_184",
    "ipr_185_199",
    "ipr_GE200",
    "dwg_single_fam_detach",
    "dwg_single_fam_attach",
    "dwg_2_unit",
    "dwg_3_4_unit",
    "dwg_5_9_unit",
    "dwg_10_19_unit",
    "dwg_20_49_unit",
    "dwg_GE50_unit",
    "dwg_mob_home",
    "dwg_other",
    "year_built_GE2014",
    "year_built_10_13",
    "year_built_00_09",
    "year_built_90_99",
    "year_built_80_89",
    "year_built_70_79",
    "year_built_60_69",
    "year_built_50_59",
    "year_built_40_49",
    "year_built_L1939",
]


def test_default_constraints_expanded_selection():
    pup_default_constraints_expanded_selection = acs.puma(
        p,
        constraints_selection=up_expanded_constraints_selection,
        censusapikey=pytest.CENSUSAPIKEY,
    )

    observed_values = pup_default_constraints_expanded_selection.constraints.loc[
        :, ["theme", "code"]
    ].values
    known_values = pup_default_constraints_expanded_selection_values

    observed_cols = pup_default_constraints_expanded_selection.est_ind.columns.tolist()
    known_cols = pup_default_constraints_expanded_selection_cols

    numpy.testing.assert_array_equal(observed_values, known_values)
    numpy.testing.assert_equal(observed_cols, known_cols)


# -----------------------------------------------------------------------------------

#####################################################################################
# 3. Default constraints, custom selection
#####################################################################################

# -----------------------------------------------------------------------------------


pup_default_constraints_custom_selection_values = numpy.array(
    [
        ["universe", "B01001001"],
        ["universe", "B09019026"],
        ["universe", "B25001001"],
        ["universe", "B25003001"],
        ["universe", "B27010001"],
        ["worker", "B23025004"],
        ["worker", "B23025005"],
        ["worker", "B23025006"],
        ["worker", "B23025007"],
        ["worker", "B24080004"],
        ["worker", "B24080005"],
        ["worker", "B24080006"],
        ["worker", "B24080007"],
        ["worker", "B24080008"],
        ["worker", "B24080009"],
        ["worker", "B24080010"],
        ["worker", "B24080011"],
        ["worker", "B24080014"],
        ["worker", "B24080015"],
        ["worker", "B24080016"],
        ["worker", "B24080017"],
        ["worker", "B24080018"],
        ["worker", "B24080019"],
        ["worker", "B24080020"],
        ["worker", "B24080021"],
        ["worker", "C24010005"],
        ["worker", "C24010006"],
        ["worker", "C24010008"],
        ["worker", "C24010009"],
        ["worker", "C24010010"],
        ["worker", "C24010012"],
        ["worker", "C24010013"],
        ["worker", "C24010014"],
        ["worker", "C24010015"],
        ["worker", "C24010017"],
        ["worker", "C24010018"],
        ["worker", "C24010020"],
        ["worker", "C24010022"],
        ["worker", "C24010023"],
        ["worker", "C24010024"],
        ["worker", "C24010025"],
        ["worker", "C24010026"],
        ["worker", "C24010028"],
        ["worker", "C24010029"],
        ["worker", "C24010031"],
        ["worker", "C24010032"],
        ["worker", "C24010033"],
        ["worker", "C24010035"],
        ["worker", "C24010036"],
        ["worker", "C24010037"],
        ["worker", "C24010041"],
        ["worker", "C24010042"],
        ["worker", "C24010044"],
        ["worker", "C24010045"],
        ["worker", "C24010046"],
        ["worker", "C24010048"],
        ["worker", "C24010049"],
        ["worker", "C24010050"],
        ["worker", "C24010051"],
        ["worker", "C24010053"],
        ["worker", "C24010054"],
        ["worker", "C24010056"],
        ["worker", "C24010058"],
        ["worker", "C24010059"],
        ["worker", "C24010060"],
        ["worker", "C24010061"],
        ["worker", "C24010062"],
        ["worker", "C24010064"],
        ["worker", "C24010065"],
        ["worker", "C24010067"],
        ["worker", "C24010068"],
        ["worker", "C24010069"],
        ["worker", "C24010071"],
        ["worker", "C24010072"],
        ["worker", "C24010073"],
        ["worker", "C24030003"],
        ["worker", "C24030006"],
        ["worker", "C24030007"],
        ["worker", "C24030008"],
        ["worker", "C24030009"],
        ["worker", "C24030010"],
        ["worker", "C24030013"],
        ["worker", "C24030014"],
        ["worker", "C24030017"],
        ["worker", "C24030021"],
        ["worker", "C24030024"],
        ["worker", "C24030027"],
        ["worker", "C24030028"],
        ["worker", "C24030030"],
        ["worker", "C24030033"],
        ["worker", "C24030034"],
        ["worker", "C24030035"],
        ["worker", "C24030036"],
        ["worker", "C24030037"],
        ["worker", "C24030040"],
        ["worker", "C24030041"],
        ["worker", "C24030044"],
        ["worker", "C24030048"],
        ["worker", "C24030051"],
        ["worker", "C24030054"],
        ["worker", "C24030055"],
        ["student", "B14007003"],
        ["student", "B14007004"],
        ["student", "B14007005"],
        ["student", "B14007006"],
        ["student", "B14007007"],
        ["student", "B14007008"],
        ["student", "B14007009"],
        ["student", "B14007010"],
        ["student", "B14007011"],
        ["student", "B14007012"],
        ["student", "B14007013"],
        ["student", "B14007014"],
        ["student", "B14007015"],
        ["student", "B14007016"],
        ["student", "B14007017"],
        ["student", "B14007018"],
        ["mobility", "B08134002"],
        ["mobility", "B08134003"],
        ["mobility", "B08134004"],
        ["mobility", "B08134005"],
        ["mobility", "B08134006"],
        ["mobility", "B08134007"],
        ["mobility", "B08134008"],
        ["mobility", "B08134009"],
        ["mobility", "B08134010"],
        ["mobility", "B08301002"],
        ["mobility", "B08301010"],
        ["mobility", "B08301016"],
        ["mobility", "B08301017"],
        ["mobility", "B08301018"],
        ["mobility", "B08301019"],
        ["mobility", "B08301020"],
        ["mobility", "B08301021"],
        ["mobility", "B25044003"],
        ["mobility", "B25044004"],
        ["mobility", "B25044005"],
        ["mobility", "B25044006"],
        ["mobility", "B25044007"],
        ["mobility", "B25044008"],
        ["mobility", "B25044010"],
        ["mobility", "B25044011"],
        ["mobility", "B25044012"],
        ["mobility", "B25044013"],
        ["mobility", "B25044014"],
        ["mobility", "B25044015"],
        ["demographic", "B01001003"],
        ["demographic", "B01001004"],
        ["demographic", "B01001005"],
        ["demographic", "B01001006"],
        ["demographic", "B01001007"],
        ["demographic", "B01001008"],
        ["demographic", "B01001009"],
        ["demographic", "B01001010"],
        ["demographic", "B01001011"],
        ["demographic", "B01001012"],
        ["demographic", "B01001013"],
        ["demographic", "B01001014"],
        ["demographic", "B01001015"],
        ["demographic", "B01001016"],
        ["demographic", "B01001017"],
        ["demographic", "B01001018"],
        ["demographic", "B01001019"],
        ["demographic", "B01001020"],
        ["demographic", "B01001021"],
        ["demographic", "B01001022"],
        ["demographic", "B01001023"],
        ["demographic", "B01001024"],
        ["demographic", "B01001025"],
        ["demographic", "B01001027"],
        ["demographic", "B01001028"],
        ["demographic", "B01001029"],
        ["demographic", "B01001030"],
        ["demographic", "B01001031"],
        ["demographic", "B01001032"],
        ["demographic", "B01001033"],
        ["demographic", "B01001034"],
        ["demographic", "B01001035"],
        ["demographic", "B01001036"],
        ["demographic", "B01001037"],
        ["demographic", "B01001038"],
        ["demographic", "B01001039"],
        ["demographic", "B01001040"],
        ["demographic", "B01001041"],
        ["demographic", "B01001042"],
        ["demographic", "B01001043"],
        ["demographic", "B01001044"],
        ["demographic", "B01001045"],
        ["demographic", "B01001046"],
        ["demographic", "B01001047"],
        ["demographic", "B01001048"],
        ["demographic", "B01001049"],
        ["demographic", "B11001003"],
        ["demographic", "B11001005"],
        ["demographic", "B11001006"],
        ["demographic", "B11001008"],
        ["demographic", "B11001009"],
        ["demographic", "B11005002"],
        ["demographic", "B11005011"],
        ["demographic", "B11006002"],
        ["demographic", "B11006009"],
        ["social", "B02001002"],
        ["social", "B02001003"],
        ["social", "B02001004"],
        ["social", "B02001005"],
        ["social", "B02001006"],
        ["social", "B02001007"],
        ["social", "B02001008"],
        ["social", "B03003002"],
        ["social", "B03003003"],
        ["economic", "B19001002"],
        ["economic", "B19001003"],
        ["economic", "B19001004"],
        ["economic", "B19001005"],
        ["economic", "B19001006"],
        ["economic", "B19001007"],
        ["economic", "B19001008"],
        ["economic", "B19001009"],
        ["economic", "B19001010"],
        ["economic", "B19001011"],
        ["economic", "B19001012"],
        ["economic", "B19001013"],
        ["economic", "B19001014"],
        ["economic", "B19001015"],
        ["economic", "B19001016"],
        ["economic", "B19001017"],
        ["economic", "C17002002"],
        ["economic", "C17002003"],
        ["economic", "C17002004"],
        ["economic", "C17002005"],
        ["economic", "C17002006"],
        ["economic", "C17002007"],
        ["economic", "C17002008"],
        ["housing", "B25003002"],
        ["housing", "B25003003"],
        ["housing", "B25024002"],
        ["housing", "B25024003"],
        ["housing", "B25024004"],
        ["housing", "B25024005"],
        ["housing", "B25024006"],
        ["housing", "B25024007"],
        ["housing", "B25024008"],
        ["housing", "B25024009"],
        ["housing", "B25024010"],
        ["housing", "B25024011"],
        ["housing", "B25034002"],
        ["housing", "B25034003"],
        ["housing", "B25034004"],
        ["housing", "B25034005"],
        ["housing", "B25034006"],
        ["housing", "B25034007"],
        ["housing", "B25034008"],
        ["housing", "B25034009"],
        ["housing", "B25034010"],
        ["housing", "B25034011"],
    ]
)

pup_default_constraints_custom_selection_cols = [
    "population",
    "group_quarters_pop",
    "housing_units",
    "occhu",
    "civ_noninst_pop",
    "emp_stat_employed",
    "emp_stat_unemp",
    "emp_stat_mil",
    "emp_stat_not.in.force",
    "sexcw_male_private",
    "sexcw_male_self.emp_inc",
    "sexcw_male_non.prof",
    "sexcw_male_local.gov",
    "sexcw_male_st.gov",
    "sexcw_male_fed.gov",
    "sexcw_male_self.emp_non.inc",
    "sexcw_male_wo.pay",
    "sexcw_female_private",
    "sexcw_female_self.emp_inc",
    "sexcw_female_non.prof",
    "sexcw_female_local.gov",
    "sexcw_female_st.gov",
    "sexcw_female_fed.gov",
    "sexcw_female_self.emp_non.inc",
    "sexcw_female_wo.pay",
    "sexocc_male_mgmt",
    "sexocc_male_bus.fin",
    "sexocc_male_cmp",
    "sexocc_male_eng",
    "sexocc_male_sci",
    "sexocc_male_cms",
    "sexocc_male_lgl",
    "sexocc_male_edu",
    "sexocc_male_ent",
    "sexocc_male_med",
    "sexocc_male_med.tech",
    "sexocc_male_hls",
    "sexocc_male_prt",
    "sexocc_male_law.enf",
    "sexocc_male_eat",
    "sexocc_male_cln",
    "sexocc_male_prs",
    "sexocc_male_sal",
    "sexocc_male_off",
    "sexocc_male_fff",
    "sexocc_male_con.ext",
    "sexocc_male_rpr",
    "sexocc_male_prd",
    "sexocc_male_trn",
    "sexocc_male_trn.mat",
    "sexocc_female_mgmt",
    "sexocc_female_bus.fin",
    "sexocc_female_cmp",
    "sexocc_female_eng",
    "sexocc_female_sci",
    "sexocc_female_cms",
    "sexocc_female_lgl",
    "sexocc_female_edu",
    "sexocc_female_ent",
    "sexocc_female_med",
    "sexocc_female_med.tech",
    "sexocc_female_hls",
    "sexocc_female_prt",
    "sexocc_female_law.enf",
    "sexocc_female_eat",
    "sexocc_female_cln",
    "sexocc_female_prs",
    "sexocc_female_sal",
    "sexocc_female_off",
    "sexocc_female_fff",
    "sexocc_female_con.ext",
    "sexocc_female_rpr",
    "sexocc_female_prd",
    "sexocc_female_trn",
    "sexocc_female_trn.mat",
    "sexnaics_male_agr_ext",
    "sexnaics_male_con",
    "sexnaics_male_mfg",
    "sexnaics_male_whl",
    "sexnaics_male_ret",
    "sexnaics_male_utl_trn",
    "sexnaics_male_inf",
    "sexnaics_male_fin",
    "sexnaics_male_prf",
    "sexnaics_male_edu_med_sca",
    "sexnaics_male_ent",
    "sexnaics_male_srv",
    "sexnaics_male_adm",
    "sexnaics_female_agr_ext",
    "sexnaics_female_con",
    "sexnaics_female_mfg",
    "sexnaics_female_whl",
    "sexnaics_female_ret",
    "sexnaics_female_utl_trn",
    "sexnaics_female_inf",
    "sexnaics_female_fin",
    "sexnaics_female_prf",
    "sexnaics_female_edu_med_sca",
    "sexnaics_female_ent",
    "sexnaics_female_srv",
    "sexnaics_female_adm",
    "grade_preschl",
    "grade_kind",
    "grade_1st",
    "grade_2nd",
    "grade_3rd",
    "grade_4th",
    "grade_5th",
    "grade_6th",
    "grade_7th",
    "grade_8th",
    "grade_9th",
    "grade_10th",
    "grade_11th",
    "grade_12th",
    "grade_undergrad",
    "grade_grad",
    "cmt_mins_L10",
    "cmt_mins_10.14",
    "cmt_mins_15.19",
    "cmt_mins_20.24",
    "cmt_mins_25.29",
    "cmt_mins_30.34",
    "cmt_mins_35.44",
    "cmt_mins_45.59",
    "cmt_mins_GE60",
    "travel_car_truck_van",
    "travel_public_transportation",
    "travel_taxicab",
    "travel_motorcycle",
    "travel_bicycle",
    "travel_walked",
    "travel_other",
    "travel_wfh",
    "txv_own_no_vehicle",
    "txv_own_01_vehicle",
    "txv_own_02_vehicle",
    "txv_own_03_vehicle",
    "txv_own_04_vehicle",
    "txv_own_GE05_vehicle",
    "txv_rent_no_vehicle",
    "txv_rent_01_vehicle",
    "txv_rent_02_vehicle",
    "txv_rent_03_vehicle",
    "txv_rent_04_vehicle",
    "txv_rent_GE05_vehicle",
    "male_a05u",
    "male_a05_09",
    "male_a10_14",
    "male_a15_17",
    "male_a18_19",
    "male_a20",
    "male_a21",
    "male_a22_24",
    "male_a25_29",
    "male_a30_34",
    "male_a35_39",
    "male_a40_44",
    "male_a45_49",
    "male_a50_54",
    "male_a55_59",
    "male_a60_61",
    "male_a62_64",
    "male_a65_66",
    "male_a67_69",
    "male_a70_74",
    "male_a75_79",
    "male_a80_84",
    "male_a85o",
    "female_a05u",
    "female_a05_09",
    "female_a10_14",
    "female_a15_17",
    "female_a18_19",
    "female_a20",
    "female_a21",
    "female_a22_24",
    "female_a25_29",
    "female_a30_34",
    "female_a35_39",
    "female_a40_44",
    "female_a45_49",
    "female_a50_54",
    "female_a55_59",
    "female_a60_61",
    "female_a62_64",
    "female_a65_66",
    "female_a67_69",
    "female_a70_74",
    "female_a75_79",
    "female_a80_84",
    "female_a85o",
    "hht_married",
    "hht_male_no_spouse",
    "hht_female_no_spouse",
    "hht_alone",
    "hht_not_alone",
    "minors_yes",
    "minors_no",
    "seniors_yes",
    "seniors_no",
    "race_white",
    "race_blk_af_amer",
    "race_native_amer",
    "race_asian",
    "race_pac_island",
    "race_other",
    "race_mult",
    "hsplat_no",
    "hsplat_yes",
    "hhinc_L10k",
    "hhinc_10_15k",
    "hhinc_15_20k",
    "hhinc_20_25k",
    "hhinc_25_30k",
    "hhinc_30_35k",
    "hhinc_35_40k",
    "hhinc_40_45k",
    "hhinc_45_50k",
    "hhinc_50_60k",
    "hhinc_60_75k",
    "hhinc_75_100k",
    "hhinc_100_125k",
    "hhinc_125_150k",
    "hhinc_150_200k",
    "hhinc_GE200k",
    "ipr_L050",
    "ipr_050_099",
    "ipr_100_124",
    "ipr_125_149",
    "ipr_150_184",
    "ipr_185_199",
    "ipr_GE200",
    "tenure_own",
    "tenure_rent",
    "dwg_single_fam_detach",
    "dwg_single_fam_attach",
    "dwg_2_unit",
    "dwg_3_4_unit",
    "dwg_5_9_unit",
    "dwg_10_19_unit",
    "dwg_20_49_unit",
    "dwg_GE50_unit",
    "dwg_mob_home",
    "dwg_other",
    "year_built_GE2014",
    "year_built_10_13",
    "year_built_00_09",
    "year_built_90_99",
    "year_built_80_89",
    "year_built_70_79",
    "year_built_60_69",
    "year_built_50_59",
    "year_built_40_49",
    "year_built_L1939",
]


def test_default_constraints_custom_selection():
    hh_synth_sel = {
        "universe": True,
        "worker": ["emp_stat", "sexcw", "sexocc", "sexnaics"],
        "student": ["grade"],
        "mobility": ["commute", "travel", "tenure_vehicles"],
        "demographic": ["sex_age", "hhtype", "minors", "seniors"],
        "social": ["race", "hsplat"],
        "economic": ["hhinc", "ipr"],
        "housing": ["tenure", "units", "year_built"],
    }

    pup_default_constraints_custom_selection = acs.puma(
        p, constraints_selection=hh_synth_sel, censusapikey=pytest.CENSUSAPIKEY
    )

    observed_values = pup_default_constraints_custom_selection.constraints.loc[
        :, ["theme", "code"]
    ].values
    known_values = pup_default_constraints_custom_selection_values

    observed_cols = pup_default_constraints_custom_selection.est_ind.columns.tolist()
    known_cols = pup_default_constraints_custom_selection_cols

    numpy.testing.assert_array_equal(observed_values, known_values)
    numpy.testing.assert_equal(observed_cols, known_cols)


# -----------------------------------------------------------------------------------

#####################################################################################
# 4. Custom constraints, default order
#####################################################################################

# -----------------------------------------------------------------------------------


# custom constraints, no selection, default order
pup_custom_constraints_default_order_values = numpy.array(
    [
        ["universe", "B01001001"],
        ["universe", "B09019026"],
        ["universe", "B25001001"],
        ["mobility", "B08134002"],
        ["mobility", "B08134003"],
        ["mobility", "B08134004"],
        ["mobility", "B08134005"],
        ["mobility", "B08134006"],
        ["mobility", "B08134007"],
        ["mobility", "B08134008"],
        ["mobility", "B08134009"],
        ["mobility", "B08134010"],
        ["economic", "C17002002"],
        ["economic", "C17002003"],
        ["economic", "C17002004"],
        ["economic", "C17002005"],
        ["economic", "C17002006"],
        ["economic", "C17002007"],
        ["economic", "C17002008"],
    ]
)

pup_custom_constraints_default_order_cols = [
    "population",
    "group_quarters_pop",
    "housing_units",
    "cmt_mins_L10",
    "cmt_mins_10.14",
    "cmt_mins_15.19",
    "cmt_mins_20.24",
    "cmt_mins_25.29",
    "cmt_mins_30.34",
    "cmt_mins_35.44",
    "cmt_mins_45.59",
    "cmt_mins_GE60",
    "ipr_L050",
    "ipr_050_099",
    "ipr_100_124",
    "ipr_125_149",
    "ipr_150_184",
    "ipr_185_199",
    "ipr_GE200",
]


def test_custom_constraints_default_order():
    custom_sel = {
        "universe": ["population", "group_quarters_pop", "housing_units"],
        "mobility": ["commute"],
        "economic": ["ipr"],
    }
    cst = acs.select_constraints(constraints, custom_sel)

    pup_custom_constraints_default_order = acs.puma(
        p, constraints=cst, censusapikey=pytest.CENSUSAPIKEY
    )

    observed_values = pup_custom_constraints_default_order.constraints.loc[
        :, ["theme", "code"]
    ].values
    known_values = pup_custom_constraints_default_order_values

    observed_cols = pup_custom_constraints_default_order.est_ind.columns.tolist()
    known_cols = pup_custom_constraints_default_order_cols

    numpy.testing.assert_array_equal(observed_values, known_values)
    numpy.testing.assert_equal(observed_cols, known_cols)


# -----------------------------------------------------------------------------------

#####################################################################################
# 5. Custom constraints, no selection, custom order
#####################################################################################

# -----------------------------------------------------------------------------------


# custom constraints, no selection, custom order
pup_custom_constraints_custom_order_values = numpy.array(
    [
        ["mobility", "B08134002"],
        ["mobility", "B08134003"],
        ["mobility", "B08134004"],
        ["mobility", "B08134005"],
        ["mobility", "B08134006"],
        ["mobility", "B08134007"],
        ["mobility", "B08134008"],
        ["mobility", "B08134009"],
        ["mobility", "B08134010"],
        ["economic", "C17002002"],
        ["economic", "C17002003"],
        ["economic", "C17002004"],
        ["economic", "C17002005"],
        ["economic", "C17002006"],
        ["economic", "C17002007"],
        ["economic", "C17002008"],
        ["universe", "B01001001"],
        ["universe", "B09019026"],
        ["universe", "B25001001"],
    ]
)

pup_custom_constraints_custom_order_cols = [
    "cmt_mins_L10",
    "cmt_mins_10.14",
    "cmt_mins_15.19",
    "cmt_mins_20.24",
    "cmt_mins_25.29",
    "cmt_mins_30.34",
    "cmt_mins_35.44",
    "cmt_mins_45.59",
    "cmt_mins_GE60",
    "ipr_L050",
    "ipr_050_099",
    "ipr_100_124",
    "ipr_125_149",
    "ipr_150_184",
    "ipr_185_199",
    "ipr_GE200",
    "population",
    "group_quarters_pop",
    "housing_units",
]


def test_custom_constraints_custom_order():
    custom_sel = {
        "universe": ["population", "group_quarters_pop", "housing_units"],
        "mobility": ["commute"],
        "economic": ["ipr"],
    }
    cst = acs.select_constraints(constraints, custom_sel)

    custom_theme_order = ["mobility", "economic", "universe"]

    pup_custom_constraints_custom_order = acs.puma(
        p,
        constraints=cst,
        constraints_theme_order=custom_theme_order,
        censusapikey=pytest.CENSUSAPIKEY,
    )

    observed_values = pup_custom_constraints_custom_order.constraints.loc[
        :, ["theme", "code"]
    ].values
    known_values = pup_custom_constraints_custom_order_values

    observed_cols = pup_custom_constraints_custom_order.est_ind.columns.tolist()
    known_cols = pup_custom_constraints_custom_order_cols

    numpy.testing.assert_array_equal(observed_values, known_values)
    numpy.testing.assert_equal(observed_cols, known_cols)


# -----------------------------------------------------------------------------------

#####################################################################################
# 6. Custom constraints, with selection, custom order
#####################################################################################

# -----------------------------------------------------------------------------------


# custom constraints, with selection, custom order
pup_custom_constraints_custom_order_wsel_values = numpy.array(
    [
        ["mobility", "B08134002"],
        ["mobility", "B08134003"],
        ["mobility", "B08134004"],
        ["mobility", "B08134005"],
        ["mobility", "B08134006"],
        ["mobility", "B08134007"],
        ["mobility", "B08134008"],
        ["mobility", "B08134009"],
        ["mobility", "B08134010"],
        ["economic", "C17002002"],
        ["economic", "C17002003"],
        ["economic", "C17002004"],
        ["economic", "C17002005"],
        ["economic", "C17002006"],
        ["economic", "C17002007"],
        ["economic", "C17002008"],
        ["universe", "B01001001"],
        ["universe", "B09019026"],
        ["universe", "B25001001"],
    ]
)

pup_custom_constraints_custom_order_wsel_cols = [
    "cmt_mins_L10",
    "cmt_mins_10.14",
    "cmt_mins_15.19",
    "cmt_mins_20.24",
    "cmt_mins_25.29",
    "cmt_mins_30.34",
    "cmt_mins_35.44",
    "cmt_mins_45.59",
    "cmt_mins_GE60",
    "ipr_L050",
    "ipr_050_099",
    "ipr_100_124",
    "ipr_125_149",
    "ipr_150_184",
    "ipr_185_199",
    "ipr_GE200",
    "population",
    "group_quarters_pop",
    "housing_units",
]


def test_custom_constraints_custom_order_wsel():
    custom_sel = {
        "universe": ["population", "group_quarters_pop", "housing_units"],
        "mobility": ["commute"],
        "demographic": ["race"],
        "economic": ["ipr"],
    }
    cst = acs.select_constraints(constraints, custom_sel)

    custom_theme_order = ["mobility", "economic", "demographic", "universe"]

    pup_custom_constraints_custom_order_wsel = acs.puma(
        p,
        constraints=cst,
        constraints_selection={"economic": True, "mobility": True, "universe": True},
        constraints_theme_order=custom_theme_order,
        censusapikey=pytest.CENSUSAPIKEY,
    )

    observed_values = pup_custom_constraints_custom_order_wsel.constraints.loc[
        :, ["theme", "code"]
    ].values
    known_values = pup_custom_constraints_custom_order_wsel_values

    observed_cols = pup_custom_constraints_custom_order_wsel.est_ind.columns.tolist()
    known_cols = pup_custom_constraints_custom_order_wsel_cols

    numpy.testing.assert_array_equal(observed_values, known_values)
    numpy.testing.assert_equal(observed_cols, known_cols)
